{"ast":null,"code":"var _jsxFileName = \"/Users/lexi/developer/msportfolio/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useGoogleLogin } from 'react-google-login'; // refresh token\n\nimport { refreshTokenSetup } from '../utils/refreshToken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = '707788443358-u05p46nssla3l8tmn58tpo9r5sommgks.apps.googleusercontent.com';\n\nfunction Login() {\n  _s();\n\n  const onSuccess = res => {\n    console.log('Login Success: currentUser:', res.profileObj);\n    alert(`Logged in successfully welcome ${res.profileObj.name} 😍. \\n See console for full profile object.`);\n    refreshTokenSetup(res);\n  };\n\n  const onFailure = res => {\n    console.log('Login failed: res:', res);\n    alert(`Failed to login. 😢 Please ping this to repo owner twitter.com/sivanesh_fiz`);\n  };\n\n  const {\n    signIn\n  } = useGoogleLogin({\n    onSuccess,\n    onFailure,\n    clientId,\n    isSignedIn: true,\n    accessType: 'offline' // responseType: 'code',\n    // prompt: 'consent',\n\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: signIn,\n    className: \"button\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"icons/google.svg\",\n      alt: \"google login\",\n      className: \"icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"buttonText\",\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"QecT91aAQ8VpaPV0pp8B14sjybY=\", false, function () {\n  return [useGoogleLogin];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/lexi/developer/msportfolio/src/pages/Login.js"],"names":["React","useGoogleLogin","refreshTokenSetup","clientId","Login","onSuccess","res","console","log","profileObj","alert","name","onFailure","signIn","isSignedIn","accessType"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,oBAA/B,C,CAEA;;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;AAEA,MAAMC,QAAQ,GACV,0EADJ;;AAGA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAMC,SAAS,GAAIC,GAAD,IAAS;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,GAAG,CAACG,UAA/C;AACAC,IAAAA,KAAK,CACA,kCAAiCJ,GAAG,CAACG,UAAJ,CAAeE,IAAK,8CADrD,CAAL;AAGAT,IAAAA,iBAAiB,CAACI,GAAD,CAAjB;AACH,GAND;;AAQA,QAAMM,SAAS,GAAIN,GAAD,IAAS;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,GAAlC;AACAI,IAAAA,KAAK,CACA,6EADA,CAAL;AAGH,GALD;;AAOA,QAAM;AAAEG,IAAAA;AAAF,MAAaZ,cAAc,CAAC;AAC9BI,IAAAA,SAD8B;AAE9BO,IAAAA,SAF8B;AAG9BT,IAAAA,QAH8B;AAI9BW,IAAAA,UAAU,EAAE,IAJkB;AAK9BC,IAAAA,UAAU,EAAE,SALkB,CAM9B;AACA;;AAP8B,GAAD,CAAjC;AAUA,sBACI;AAAQ,IAAA,OAAO,EAAEF,MAAjB;AAAyB,IAAA,SAAS,EAAC,QAAnC;AAAA,4BACI;AAAK,MAAA,GAAG,EAAC,kBAAT;AAA4B,MAAA,GAAG,EAAC,cAAhC;AAA+C,MAAA,SAAS,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAjCQT,K;UAgBcH,c;;;KAhBdG,K;AAmCT,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { useGoogleLogin } from 'react-google-login';\n\n// refresh token\nimport { refreshTokenSetup } from '../utils/refreshToken';\n\nconst clientId =\n    '707788443358-u05p46nssla3l8tmn58tpo9r5sommgks.apps.googleusercontent.com';\n\nfunction Login() {\n    const onSuccess = (res) => {\n        console.log('Login Success: currentUser:', res.profileObj);\n        alert(\n            `Logged in successfully welcome ${res.profileObj.name} 😍. \\n See console for full profile object.`\n        );\n        refreshTokenSetup(res);\n    };\n\n    const onFailure = (res) => {\n        console.log('Login failed: res:', res);\n        alert(\n            `Failed to login. 😢 Please ping this to repo owner twitter.com/sivanesh_fiz`\n        );\n    };\n\n    const { signIn } = useGoogleLogin({\n        onSuccess,\n        onFailure,\n        clientId,\n        isSignedIn: true,\n        accessType: 'offline',\n        // responseType: 'code',\n        // prompt: 'consent',\n    });\n\n    return (\n        <button onClick={signIn} className=\"button\">\n            <img src=\"icons/google.svg\" alt=\"google login\" className=\"icon\"></img>\n\n            <span className=\"buttonText\">Sign in with Google</span>\n        </button>\n    );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}