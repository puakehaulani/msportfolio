{"ast":null,"code":"var _jsxFileName = \"/Users/lexi/developer/msportfolio/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useGoogleLogin } from 'react-google-login';\nimport { GoogleLogin } from 'react-google-login';\nimport { FcGoogle } from 'react-icons/fc';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config(); // refresh token\n// import { refreshTokenSetup } from '../utils/refreshToken';\n\n\nconst clientId = process.env.clientId; //     '1447611280-t0b9r21g88chllee8v4aqnvorah29808.apps.googleusercontent.com';\n\nfunction Login() {\n  _s();\n\n  const onSuccess = res => {\n    console.log('Login Success: currentUser:', res.profileObj);\n    alert(`Logged in successfully welcome ${res.profileObj.name} 😍. \\n See console for full profile object.`); // refreshTokenSetup(res);\n  };\n\n  const onFailure = res => {\n    console.log('Login failed: res:', res);\n    alert(`Access denied. Failed to login.`);\n  };\n\n  const {\n    signIn\n  } = useGoogleLogin({\n    onSuccess,\n    onFailure,\n    clientId,\n    isSignedIn: true,\n    accessType: 'offline' // responseType: 'code',\n    // prompt: 'consent',\n\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      height: \"100vh\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: signIn,\n      variant: \"light\",\n      size: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: process.env.clientId,\n        buttonText: \"Log in with Google\",\n        onSuccess: onSuccess,\n        onFailure: onFailure,\n        cookiePolicy: 'single_host_origin'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"QecT91aAQ8VpaPV0pp8B14sjybY=\", false, function () {\n  return [useGoogleLogin];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/lexi/developer/msportfolio/src/pages/Login.js"],"names":["React","useGoogleLogin","GoogleLogin","FcGoogle","Button","Container","require","config","clientId","process","env","Login","onSuccess","res","console","log","profileObj","alert","name","onFailure","signIn","isSignedIn","accessType","height","display","justifyContent","alignItems"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;;AAEAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,G,CAEA;AACA;;;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYF,QAA7B,C,CACA;;AAEA,SAASG,KAAT,GAAiB;AAAA;;AACb,QAAMC,SAAS,GAAIC,GAAD,IAAS;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,GAAG,CAACG,UAA/C;AACAC,IAAAA,KAAK,CACA,kCAAiCJ,GAAG,CAACG,UAAJ,CAAeE,IAAK,8CADrD,CAAL,CAFuB,CAKvB;AACH,GAND;;AAQA,QAAMC,SAAS,GAAIN,GAAD,IAAS;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,GAAlC;AACAI,IAAAA,KAAK,CACA,iCADA,CAAL;AAGH,GALD;;AAOA,QAAM;AAAEG,IAAAA;AAAF,MAAanB,cAAc,CAAC;AAC9BW,IAAAA,SAD8B;AAE9BO,IAAAA,SAF8B;AAG9BX,IAAAA,QAH8B;AAI9Ba,IAAAA,UAAU,EAAE,IAJkB;AAK9BC,IAAAA,UAAU,EAAE,SALkB,CAM9B;AACA;;AAP8B,GAAD,CAAjC;AAUA,sBACI,QAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AACdC,MAAAA,MAAM,EAAE,OADM;AAEdC,MAAAA,OAAO,EAAE,MAFK;AAGdC,MAAAA,cAAc,EAAE,QAHF;AAIdC,MAAAA,UAAU,EAAE;AAJE,KAAlB;AAAA,2BAMI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEN,MAAjB;AAAyB,MAAA,OAAO,EAAC,OAAjC;AAAyC,MAAA,IAAI,EAAC,IAA9C;AAAA,6BAEI,QAAC,WAAD;AACI,QAAA,QAAQ,EAAEX,OAAO,CAACC,GAAR,CAAYF,QAD1B;AAEI,QAAA,UAAU,EAAC,oBAFf;AAGI,QAAA,SAAS,EAAEI,SAHf;AAII,QAAA,SAAS,EAAEO,SAJf;AAKI,QAAA,YAAY,EAAE;AALlB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GAjDQR,K;UAgBcV,c;;;KAhBdU,K;AAmDT,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { useGoogleLogin } from 'react-google-login';\nimport { GoogleLogin } from 'react-google-login';\nimport { FcGoogle } from 'react-icons/fc';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\nrequire('dotenv').config()\n\n// refresh token\n// import { refreshTokenSetup } from '../utils/refreshToken';\n\nconst clientId = process.env.clientId\n//     '1447611280-t0b9r21g88chllee8v4aqnvorah29808.apps.googleusercontent.com';\n\nfunction Login() {\n    const onSuccess = (res) => {\n        console.log('Login Success: currentUser:', res.profileObj);\n        alert(\n            `Logged in successfully welcome ${res.profileObj.name} 😍. \\n See console for full profile object.`\n        );\n        // refreshTokenSetup(res);\n    };\n\n    const onFailure = (res) => {\n        console.log('Login failed: res:', res);\n        alert(\n            `Access denied. Failed to login.`\n        );\n    };\n\n    const { signIn } = useGoogleLogin({\n        onSuccess,\n        onFailure,\n        clientId,\n        isSignedIn: true,\n        accessType: 'offline',\n        // responseType: 'code',\n        // prompt: 'consent',\n    });\n\n    return (\n        <Container style={{\n            height: \"100vh\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n        }}>\n            <Button onClick={signIn} variant=\"light\" size=\"lg\">\n                {/* <span className=\"buttonText\"><FcGoogle /> Sign in with Google</span> */}\n                <GoogleLogin\n                    clientId={process.env.clientId}\n                    buttonText=\"Log in with Google\"\n                    onSuccess={onSuccess}\n                    onFailure={onFailure}\n                    cookiePolicy={'single_host_origin'}\n                />\n            </Button>\n\n\n        </Container>\n\n\n    );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}